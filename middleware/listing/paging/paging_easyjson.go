// Code generated by easyjson for marshaling/unmarshaling. DO NOT EDIT.

package paging

import (
	json "encoding/json"

	easyjson "github.com/mailru/easyjson"
	jlexer "github.com/mailru/easyjson/jlexer"
	jwriter "github.com/mailru/easyjson/jwriter"
)

// suppress unused package warning
var (
	_ *json.RawMessage
	_ *jlexer.Lexer
	_ *jwriter.Writer
	_ easyjson.Marshaler
)

func easyjson3c4140EncodeGithubComIfreddyrondonCaptureAppListingPaging(out *jwriter.Writer, in Paging) {
	out.RawByte('{')
	first := true
	_ = first
	if !first {
		out.RawByte(',')
	}
	first = false
	out.RawString("\"max_allowed_limit\":")
	out.Int(int(in.MaxAllowedLimit))
	if !first {
		out.RawByte(',')
	}
	first = false
	out.RawString("\"limit\":")
	out.Int(int(in.Limit))
	if !first {
		out.RawByte(',')
	}
	first = false
	out.RawString("\"offset\":")
	out.Int64(int64(in.Offset))
	if in.Total != 0 {
		if !first {
			out.RawByte(',')
		}
		first = false
		out.RawString("\"total\":")
		out.Int64(int64(in.Total))
	}
	out.RawByte('}')
}
